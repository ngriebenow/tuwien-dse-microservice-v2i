variables:
    CLUSTER: dse
    ZONE: europe-west3-b
    PROJECT: dse20-group-20-271413
    MIN_NODES: 1
    MAX_NODES: 3    
    APP_NAME_SVC1: actor-registry
    APP_FOLDER_SVC1: src/actor-registry

stages:
    - build
    - test
    - deploy
    - shutdown

shutdown-job:
    stage: shutdown
    script:
        # Download Google Cloud SDK
        #test
        - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
        - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --quiet --usage-reporting=false --path-update=true
        - PATH="google-cloud-sdk/bin:${PATH}"
        - gcloud config set project $PROJECT
        - gcloud auth activate-service-account --key-file key_test_gcp.json
        - gcloud container clusters delete "$CLUSTER" --zone "$ZONE" --quiet
    rules:
        - if: '$SHUTDOWN == "1"'
    

build-job:
    stage: build
    image: maven:3.6.0-jdk-11-slim
    script:
        - cd $APP_FOLDER_SVC1
        - mvn clean compile
    rules:
        - if: '"1" == "0"'
        

test-job:
    stage: test
    image: maven:3.6.0-jdk-11-slim
    script:
        - cd $APP_FOLDER_SVC1
        - mvn clean test
    rules:
        - if: '$SHUTDOWN == "1"'
          when: never
        - if: '$CI_COMMIT_BRANCH == "master"'
        - if: '$CI_COMMIT_BRANCH == "dev"'

deploy-job:
    stage: deploy
    rules:
        - if: '$SHUTDOWN == "1"'
          when: never
        - if: '$CI_COMMIT_BRANCH == "master"'
    script:
        # Download Google Cloud SDK
        - wget https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz
        - tar zxvf google-cloud-sdk.tar.gz && ./google-cloud-sdk/install.sh --quiet --usage-reporting=false --path-update=true
        - PATH="google-cloud-sdk/bin:${PATH}"
        # Download kubectl
        - sudo apt-get update && sudo apt-get install -y apt-transport-https
        - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
        - apt-get update
        - apt-get install -y kubectl
        # Deploy to GCP
        - gcloud config set project $PROJECT
        - gcloud auth activate-service-account --key-file key_test_gcp.json
        - gcloud services enable container.googleapis.com
        - gcloud services enable cloudbuild.googleapis.com
        - gcloud services enable servicemanagement.googleapis.com
        - gcloud services enable servicecontrol.googleapis.com
        - gcloud services enable endpoints.googleapis.com
        - gcloud container clusters create "$CLUSTER" --zone "$ZONE" --num-nodes=$MIN_NODES --enable-autoscaling --max-nodes=$MAX_NODES --min-nodes=$MIN_NODES || echo "cluster should already be running"
        - gcloud container clusters get-credentials "$CLUSTER" --zone "$ZONE"
        - gcloud auth configure-docker
        - gcloud builds submit $APP_FOLDER_SVC1 --tag gcr.io/$PROJECT/$APP_NAME_SVC1
        - gcloud endpoints services deploy $APP_FOLDER_SVC1/openapi.yaml
        # TODO: change to target
        - kubectl apply -f deploy-gcp-test.yaml     